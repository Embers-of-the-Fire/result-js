import{_ as e,o as t,c as a,S as r}from"./chunks/framework.f13a96d5.js";const p=JSON.parse('{"title":"Class: Result<T, E>","description":"","frontmatter":{},"headers":[],"relativePath":"dist/classes/Result.md","filePath":"dist/classes/Result.md"}'),l={name:"dist/classes/Result.md"},o=r('<p><a href="./../README.html">@embers-of-the-fire/resultjs</a> / <a href="./../modules.html">Exports</a> / Result</p><h1 id="class-result-t-e" tabindex="-1">Class: Result&lt;T, E&gt; <a class="header-anchor" href="#class-result-t-e" aria-label="Permalink to &quot;Class: Result&lt;T, E\\&gt;&quot;">​</a></h1><p>Result type for typescript.</p><h2 id="type-parameters" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h2><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h2 id="table-of-contents" tabindex="-1">Table of contents <a class="header-anchor" href="#table-of-contents" aria-label="Permalink to &quot;Table of contents&quot;">​</a></h2><h3 id="constructors" tabindex="-1">Constructors <a class="header-anchor" href="#constructors" aria-label="Permalink to &quot;Constructors&quot;">​</a></h3><ul><li><a href="./Result.html#constructor">constructor</a></li></ul><h3 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h3><ul><li><a href="./Result.html#type">type</a></li><li><a href="./Result.html#value">value</a></li></ul><h3 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h3><ul><li><a href="./Result.html#and">and</a></li><li><a href="./Result.html#andthen">andThen</a></li><li><a href="./Result.html#err">err</a></li><li><a href="./Result.html#expect">expect</a></li><li><a href="./Result.html#expecterr">expectErr</a></li><li><a href="./Result.html#inspect">inspect</a></li><li><a href="./Result.html#inspecterr">inspectErr</a></li><li><a href="./Result.html#iserr">isErr</a></li><li><a href="./Result.html#iserrand">isErrAnd</a></li><li><a href="./Result.html#isok">isOk</a></li><li><a href="./Result.html#isokand">isOkAnd</a></li><li><a href="./Result.html#map">map</a></li><li><a href="./Result.html#maperr">mapErr</a></li><li><a href="./Result.html#mapor">mapOr</a></li><li><a href="./Result.html#maporelse">mapOrElse</a></li><li><a href="./Result.html#ok">ok</a></li><li><a href="./Result.html#or">or</a></li><li><a href="./Result.html#orelse">orElse</a></li><li><a href="./Result.html#toarray">toArray</a></li><li><a href="./Result.html#unwrap">unwrap</a></li><li><a href="./Result.html#unwraperr">unwrapErr</a></li><li><a href="./Result.html#unwrapor">unwrapOr</a></li><li><a href="./Result.html#unwraporelse">unwrapOrElse</a></li><li><a href="./Result.html#err-1">Err</a></li><li><a href="./Result.html#ok-1">Ok</a></li><li><a href="./Result.html#flatten">flatten</a></li><li><a href="./Result.html#transpose">transpose</a></li></ul><h2 id="constructors-1" tabindex="-1">Constructors <a class="header-anchor" href="#constructors-1" aria-label="Permalink to &quot;Constructors&quot;">​</a></h2><h3 id="constructor" tabindex="-1">constructor <a class="header-anchor" href="#constructor" aria-label="Permalink to &quot;constructor&quot;">​</a></h3><p>• <code>Private</code> <strong>new Result</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>value</code>, <code>type</code>)</p><p>Constructor.</p><h4 id="type-parameters-1" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-1" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="parameters" tabindex="-1">Parameters <a class="header-anchor" href="#parameters" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code> | <code>E</code></td></tr><tr><td style="text-align:left;"><code>type</code></td><td style="text-align:left;"><a href="./../enums/ResultType.html"><code>ResultType</code></a></td></tr></tbody></table><h4 id="defined-in" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L25" target="_blank" rel="noreferrer">src/lib.ts:25</a></p><h2 id="properties-1" tabindex="-1">Properties <a class="header-anchor" href="#properties-1" aria-label="Permalink to &quot;Properties&quot;">​</a></h2><h3 id="type" tabindex="-1">type <a class="header-anchor" href="#type" aria-label="Permalink to &quot;type&quot;">​</a></h3><p>• <code>Private</code> <strong>type</strong>: <a href="./../enums/ResultType.html"><code>ResultType</code></a></p><h4 id="defined-in-1" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-1" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L21" target="_blank" rel="noreferrer">src/lib.ts:21</a></p><hr><h3 id="value" tabindex="-1">value <a class="header-anchor" href="#value" aria-label="Permalink to &quot;value&quot;">​</a></h3><p>• <code>Private</code> <strong>value</strong>: <code>T</code> | <code>E</code></p><p>Actual value of the result.</p><h4 id="defined-in-2" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-2" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L20" target="_blank" rel="noreferrer">src/lib.ts:20</a></p><h2 id="methods-1" tabindex="-1">Methods <a class="header-anchor" href="#methods-1" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="and" tabindex="-1">and <a class="header-anchor" href="#and" aria-label="Permalink to &quot;and&quot;">​</a></h3><p>▸ <strong>and</strong>&lt;<code>U</code>&gt;(<code>res</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><p>Returns <code>res</code> if the result is Ok, otherwise returns the Err value of self. Arguments passed to <code>and</code> are eagerly evaluated; if you are passing the result of a function call, it is recommended to use <code>andThen</code>, which is lazily evaluated.</p><h4 id="type-parameters-2" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-2" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="parameters-1" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-1" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>res</code></td><td style="text-align:left;"><a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</td></tr></tbody></table><h4 id="returns" tabindex="-1">Returns <a class="header-anchor" href="#returns" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><h4 id="defined-in-3" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-3" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L209" target="_blank" rel="noreferrer">src/lib.ts:209</a></p><hr><h3 id="andthen" tabindex="-1">andThen <a class="header-anchor" href="#andthen" aria-label="Permalink to &quot;andThen&quot;">​</a></h3><p>▸ <strong>andThen</strong>&lt;<code>U</code>&gt;(<code>op</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><p>Calls <code>op</code> if the result is Ok, otherwise returns the Err value of self. This function can be used for control flow based on Result values.</p><h4 id="type-parameters-3" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-3" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="parameters-2" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-2" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>op</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</td></tr></tbody></table><h4 id="returns-1" tabindex="-1">Returns <a class="header-anchor" href="#returns-1" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><h4 id="defined-in-4" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-4" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L220" target="_blank" rel="noreferrer">src/lib.ts:220</a></p><hr><h3 id="err" tabindex="-1">err <a class="header-anchor" href="#err" aria-label="Permalink to &quot;err&quot;">​</a></h3><p>▸ <strong>err</strong>(): <code>null</code> | <code>E</code></p><p>Converts from <code>Result&lt;T, E&gt; to </code>E | null`, and discarding the ok value, if any.</p><h4 id="returns-2" tabindex="-1">Returns <a class="header-anchor" href="#returns-2" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | <code>E</code></p><h4 id="defined-in-5" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-5" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L72" target="_blank" rel="noreferrer">src/lib.ts:72</a></p><hr><h3 id="expect" tabindex="-1">expect <a class="header-anchor" href="#expect" aria-label="Permalink to &quot;expect&quot;">​</a></h3><p>▸ <strong>expect</strong>(<code>msg</code>): <code>T</code></p><p>Returns the contained Ok value.</p><p><strong>Hint</strong>: If you’re having trouble remembering how to phrase expect error messages remember to focus on the word “should” as in “env variable should be set by blah” or “the given binary should be available and executable by the current user”.</p><h4 id="parameters-3" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-3" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>msg</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-3" tabindex="-1">Returns <a class="header-anchor" href="#returns-3" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><p><strong><code>Throws</code></strong></p><p>Raise an error of the msg if it&#39;s err.</p><h4 id="defined-in-6" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-6" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L145" target="_blank" rel="noreferrer">src/lib.ts:145</a></p><hr><h3 id="expecterr" tabindex="-1">expectErr <a class="header-anchor" href="#expecterr" aria-label="Permalink to &quot;expectErr&quot;">​</a></h3><p>▸ <strong>expectErr</strong>(<code>msg</code>): <code>E</code></p><p>Returns the contained Err value.</p><h4 id="parameters-4" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-4" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>msg</code></td><td style="text-align:left;"><code>string</code></td></tr></tbody></table><h4 id="returns-4" tabindex="-1">Returns <a class="header-anchor" href="#returns-4" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>E</code></p><p><strong><code>Throws</code></strong></p><p>Raise an error of the msg if it&#39;s ok.</p><h4 id="defined-in-7" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-7" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L156" target="_blank" rel="noreferrer">src/lib.ts:156</a></p><hr><h3 id="inspect" tabindex="-1">inspect <a class="header-anchor" href="#inspect" aria-label="Permalink to &quot;inspect&quot;">​</a></h3><p>▸ <strong>inspect</strong>(<code>func</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><p>Calls the provided closure with the contained value (if Ok).</p><h4 id="parameters-5" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-5" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-5" tabindex="-1">Returns <a class="header-anchor" href="#returns-5" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-8" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-8" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L126" target="_blank" rel="noreferrer">src/lib.ts:126</a></p><hr><h3 id="inspecterr" tabindex="-1">inspectErr <a class="header-anchor" href="#inspecterr" aria-label="Permalink to &quot;inspectErr&quot;">​</a></h3><p>▸ <strong>inspectErr</strong>(<code>func</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="parameters-6" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-6" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>value</code>: <code>E</code>) =&gt; <code>void</code></td></tr></tbody></table><h4 id="returns-6" tabindex="-1">Returns <a class="header-anchor" href="#returns-6" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-9" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-9" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L132" target="_blank" rel="noreferrer">src/lib.ts:132</a></p><hr><h3 id="iserr" tabindex="-1">isErr <a class="header-anchor" href="#iserr" aria-label="Permalink to &quot;isErr&quot;">​</a></h3><p>▸ <strong>isErr</strong>(): <code>boolean</code></p><p>Returns <code>true</code> if the result is Err.</p><h4 id="returns-7" tabindex="-1">Returns <a class="header-anchor" href="#returns-7" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-10" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-10" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L51" target="_blank" rel="noreferrer">src/lib.ts:51</a></p><hr><h3 id="iserrand" tabindex="-1">isErrAnd <a class="header-anchor" href="#iserrand" aria-label="Permalink to &quot;isErrAnd&quot;">​</a></h3><p>▸ <strong>isErrAnd</strong>(<code>func</code>): <code>boolean</code></p><p>Returns <code>true</code> if the result is Err and the value inside of it matches a predicate.</p><h4 id="parameters-7" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-7" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>value</code>: <code>E</code>) =&gt; <code>boolean</code></td></tr></tbody></table><h4 id="returns-8" tabindex="-1">Returns <a class="header-anchor" href="#returns-8" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-11" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-11" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L55" target="_blank" rel="noreferrer">src/lib.ts:55</a></p><hr><h3 id="isok" tabindex="-1">isOk <a class="header-anchor" href="#isok" aria-label="Permalink to &quot;isOk&quot;">​</a></h3><p>▸ <strong>isOk</strong>(): <code>boolean</code></p><p>Returns <code>true</code> if the result is Ok.</p><h4 id="returns-9" tabindex="-1">Returns <a class="header-anchor" href="#returns-9" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-12" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-12" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L39" target="_blank" rel="noreferrer">src/lib.ts:39</a></p><hr><h3 id="isokand" tabindex="-1">isOkAnd <a class="header-anchor" href="#isokand" aria-label="Permalink to &quot;isOkAnd&quot;">​</a></h3><p>▸ <strong>isOkAnd</strong>(<code>func</code>): <code>boolean</code></p><p>Returns <code>true</code> if the result is Ok and the value inside of it matches a predicate.</p><h4 id="parameters-8" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-8" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <code>boolean</code></td></tr></tbody></table><h4 id="returns-10" tabindex="-1">Returns <a class="header-anchor" href="#returns-10" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>boolean</code></p><h4 id="defined-in-13" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-13" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L43" target="_blank" rel="noreferrer">src/lib.ts:43</a></p><hr><h3 id="map" tabindex="-1">map <a class="header-anchor" href="#map" aria-label="Permalink to &quot;map&quot;">​</a></h3><p>▸ <strong>map</strong>&lt;<code>U</code>&gt;(<code>op</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><p>Maps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;U, E&gt;</code> by applying a function to a contained Ok value, leaving an Err value untouched. This function can be used to compose the results of two functions.</p><h4 id="type-parameters-4" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-4" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="parameters-9" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-9" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>op</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <code>U</code></td></tr></tbody></table><h4 id="returns-11" tabindex="-1">Returns <a class="header-anchor" href="#returns-11" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>U</code>, <code>E</code>&gt;</p><h4 id="defined-in-14" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-14" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L84" target="_blank" rel="noreferrer">src/lib.ts:84</a></p><hr><h3 id="maperr" tabindex="-1">mapErr <a class="header-anchor" href="#maperr" aria-label="Permalink to &quot;mapErr&quot;">​</a></h3><p>▸ <strong>mapErr</strong>&lt;<code>F</code>&gt;(<code>op</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><p>Maps a <code>Result&lt;T, E&gt;</code> to <code>Result&lt;T, F&gt;</code> by applying a function to a contained Err value, leaving an Ok value untouched. This function can be used to pass through a successful result while handling an error.</p><h4 id="type-parameters-5" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-5" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-10" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-10" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>op</code></td><td style="text-align:left;">(<code>value</code>: <code>E</code>) =&gt; <code>F</code></td></tr></tbody></table><h4 id="returns-12" tabindex="-1">Returns <a class="header-anchor" href="#returns-12" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><h4 id="defined-in-15" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-15" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L117" target="_blank" rel="noreferrer">src/lib.ts:117</a></p><hr><h3 id="mapor" tabindex="-1">mapOr <a class="header-anchor" href="#mapor" aria-label="Permalink to &quot;mapOr&quot;">​</a></h3><p>▸ <strong>mapOr</strong>&lt;<code>U</code>&gt;(<code>d</code>, <code>func</code>): <code>U</code></p><p>Returns the provided default (if Err), or applies a function to the contained value (if Ok), Arguments passed to <code>mapOr</code> are eagerly evaluated; if you are passing the result of a function call, it is recommended to use <code>mapOrElse</code>, which is lazily evaluated.</p><h4 id="type-parameters-6" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-6" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="parameters-11" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-11" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>d</code></td><td style="text-align:left;"><code>U</code></td></tr><tr><td style="text-align:left;"><code>func</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <code>U</code></td></tr></tbody></table><h4 id="returns-13" tabindex="-1">Returns <a class="header-anchor" href="#returns-13" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h4 id="defined-in-16" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-16" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L95" target="_blank" rel="noreferrer">src/lib.ts:95</a></p><hr><h3 id="maporelse" tabindex="-1">mapOrElse <a class="header-anchor" href="#maporelse" aria-label="Permalink to &quot;mapOrElse&quot;">​</a></h3><p>▸ <strong>mapOrElse</strong>&lt;<code>U</code>&gt;(<code>d</code>, <code>f</code>): <code>U</code></p><p>Maps a <code>Result&lt;T, E&gt;</code> to <code>U</code> by applying fallback function default to a contained Err value, or function to a contained Ok value. This function can be used to unpack a successful result while handling an error.</p><h4 id="type-parameters-7" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-7" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>U</code></td></tr></tbody></table><h4 id="parameters-12" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-12" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>d</code></td><td style="text-align:left;">(<code>value</code>: <code>E</code>) =&gt; <code>U</code></td></tr><tr><td style="text-align:left;"><code>f</code></td><td style="text-align:left;">(<code>value</code>: <code>T</code>) =&gt; <code>U</code></td></tr></tbody></table><h4 id="returns-14" tabindex="-1">Returns <a class="header-anchor" href="#returns-14" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>U</code></p><h4 id="defined-in-17" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-17" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L106" target="_blank" rel="noreferrer">src/lib.ts:106</a></p><hr><h3 id="ok" tabindex="-1">ok <a class="header-anchor" href="#ok" aria-label="Permalink to &quot;ok&quot;">​</a></h3><p>▸ <strong>ok</strong>(): <code>null</code> | <code>T</code></p><p>Converts from <code>Result&lt;T, E&gt; to </code>T | null`, and discarding the error, if any.</p><h4 id="returns-15" tabindex="-1">Returns <a class="header-anchor" href="#returns-15" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | <code>T</code></p><h4 id="defined-in-18" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-18" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L64" target="_blank" rel="noreferrer">src/lib.ts:64</a></p><hr><h3 id="or" tabindex="-1">or <a class="header-anchor" href="#or" aria-label="Permalink to &quot;or&quot;">​</a></h3><p>▸ <strong>or</strong>&lt;<code>F</code>&gt;(<code>res</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><p>Returns <code>res</code> if the result is Err, otherwise returns the Ok value of self. Arguments passed to <code>or</code> are eagerly evaluated; if you are passing the result of a function call, it is recommended to use <code>orElse</code>, which is lazily evaluated.</p><h4 id="type-parameters-8" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-8" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-13" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-13" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>res</code></td><td style="text-align:left;"><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</td></tr></tbody></table><h4 id="returns-16" tabindex="-1">Returns <a class="header-anchor" href="#returns-16" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><h4 id="defined-in-19" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-19" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L232" target="_blank" rel="noreferrer">src/lib.ts:232</a></p><hr><h3 id="orelse" tabindex="-1">orElse <a class="header-anchor" href="#orelse" aria-label="Permalink to &quot;orElse&quot;">​</a></h3><p>▸ <strong>orElse</strong>&lt;<code>F</code>&gt;(<code>op</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><p>Calls <code>op</code> if the result is Err, otherwise returns the Ok value of self. This function can be used for control flow based on result values.</p><h4 id="type-parameters-9" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-9" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>F</code></td></tr></tbody></table><h4 id="parameters-14" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-14" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>op</code></td><td style="text-align:left;">(<code>value</code>: <code>E</code>) =&gt; <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</td></tr></tbody></table><h4 id="returns-17" tabindex="-1">Returns <a class="header-anchor" href="#returns-17" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>F</code>&gt;</p><h4 id="defined-in-20" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-20" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L243" target="_blank" rel="noreferrer">src/lib.ts:243</a></p><hr><h3 id="toarray" tabindex="-1">toArray <a class="header-anchor" href="#toarray" aria-label="Permalink to &quot;toArray&quot;">​</a></h3><p>▸ <strong>toArray</strong>(): <code>T</code>[]</p><p>Returns an array over the possibly contained value.</p><h4 id="returns-18" tabindex="-1">Returns <a class="header-anchor" href="#returns-18" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code>[]</p><h4 id="defined-in-21" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-21" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L252" target="_blank" rel="noreferrer">src/lib.ts:252</a></p><hr><h3 id="unwrap" tabindex="-1">unwrap <a class="header-anchor" href="#unwrap" aria-label="Permalink to &quot;unwrap&quot;">​</a></h3><p>▸ <strong>unwrap</strong>(): <code>T</code></p><p>Returns the contained Ok value.</p><h4 id="returns-19" tabindex="-1">Returns <a class="header-anchor" href="#returns-19" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><p><strong><code>Throws</code></strong></p><p>Raise an error if it&#39;s err.</p><h4 id="defined-in-22" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-22" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L167" target="_blank" rel="noreferrer">src/lib.ts:167</a></p><hr><h3 id="unwraperr" tabindex="-1">unwrapErr <a class="header-anchor" href="#unwraperr" aria-label="Permalink to &quot;unwrapErr&quot;">​</a></h3><p>▸ <strong>unwrapErr</strong>(): <code>E</code></p><p>Returns the contained Err value.</p><h4 id="returns-20" tabindex="-1">Returns <a class="header-anchor" href="#returns-20" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>E</code></p><p><strong><code>Throws</code></strong></p><p>Raise an error if it&#39;s err.</p><h4 id="defined-in-23" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-23" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L178" target="_blank" rel="noreferrer">src/lib.ts:178</a></p><hr><h3 id="unwrapor" tabindex="-1">unwrapOr <a class="header-anchor" href="#unwrapor" aria-label="Permalink to &quot;unwrapOr&quot;">​</a></h3><p>▸ <strong>unwrapOr</strong>(<code>else_value</code>): <code>T</code></p><p>Unwrap a result. Return the value if it&#39;s ok, and return <code>else_value</code> if it&#39;s err. If you want to get a better performance when getting that fallback value, see <code>Result.unwrapOrElse()</code> method.</p><h4 id="parameters-15" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-15" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>else_value</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="returns-21" tabindex="-1">Returns <a class="header-anchor" href="#returns-21" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><h4 id="defined-in-24" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-24" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L189" target="_blank" rel="noreferrer">src/lib.ts:189</a></p><hr><h3 id="unwraporelse" tabindex="-1">unwrapOrElse <a class="header-anchor" href="#unwraporelse" aria-label="Permalink to &quot;unwrapOrElse&quot;">​</a></h3><p>▸ <strong>unwrapOrElse</strong>(<code>else_func</code>): <code>T</code></p><p>Unwrap a result. Return the value if it&#39;s ok, and call the function if it&#39;s err.</p><h4 id="parameters-16" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-16" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>else_func</code></td><td style="text-align:left;">() =&gt; <code>T</code></td></tr></tbody></table><h4 id="returns-22" tabindex="-1">Returns <a class="header-anchor" href="#returns-22" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>T</code></p><h4 id="defined-in-25" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-25" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L197" target="_blank" rel="noreferrer">src/lib.ts:197</a></p><hr><h3 id="err-1" tabindex="-1">Err <a class="header-anchor" href="#err-1" aria-label="Permalink to &quot;Err&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Err</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>value</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><p>Create an <code>Err&lt;E&gt;</code> value.</p><h4 id="type-parameters-10" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-10" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="parameters-17" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-17" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="returns-23" tabindex="-1">Returns <a class="header-anchor" href="#returns-23" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-26" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-26" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L34" target="_blank" rel="noreferrer">src/lib.ts:34</a></p><hr><h3 id="ok-1" tabindex="-1">Ok <a class="header-anchor" href="#ok-1" aria-label="Permalink to &quot;Ok&quot;">​</a></h3><p>▸ <code>Static</code> <strong>Ok</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>value</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><p>Create an <code>Ok&lt;T&gt;</code> value.</p><h4 id="type-parameters-11" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-11" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="parameters-18" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-18" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th></tr></thead><tbody><tr><td style="text-align:left;"><code>value</code></td><td style="text-align:left;"><code>T</code></td></tr></tbody></table><h4 id="returns-24" tabindex="-1">Returns <a class="header-anchor" href="#returns-24" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-27" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-27" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L30" target="_blank" rel="noreferrer">src/lib.ts:30</a></p><hr><h3 id="flatten" tabindex="-1">flatten <a class="header-anchor" href="#flatten" aria-label="Permalink to &quot;flatten&quot;">​</a></h3><p>▸ <code>Static</code> <strong>flatten</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>result</code>): <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><p>Converts from Result&lt;Result&lt;T, E&gt;, E&gt; to Result&lt;T, E&gt;</p><h4 id="type-parameters-12" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-12" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="parameters-19" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-19" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><a href="./Result.html"><code>Result</code></a>&lt;<a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;, <code>E</code>&gt;</td><td style="text-align:left;">Value of the result.</td></tr></tbody></table><h4 id="returns-25" tabindex="-1">Returns <a class="header-anchor" href="#returns-25" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-28" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-28" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L279" target="_blank" rel="noreferrer">src/lib.ts:279</a></p><hr><h3 id="transpose" tabindex="-1">transpose <a class="header-anchor" href="#transpose" aria-label="Permalink to &quot;transpose&quot;">​</a></h3><p>▸ <code>Static</code> <strong>transpose</strong>&lt;<code>T</code>, <code>E</code>&gt;(<code>result</code>): <code>null</code> | <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><p>Transposes a Result of a nullable ok value into a nullable Result value. <code>Ok(null/undefined)</code> will be mapped to <code>null</code>.</p><h4 id="type-parameters-13" tabindex="-1">Type parameters <a class="header-anchor" href="#type-parameters-13" aria-label="Permalink to &quot;Type parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th></tr></thead><tbody><tr><td style="text-align:left;"><code>T</code></td></tr><tr><td style="text-align:left;"><code>E</code></td></tr></tbody></table><h4 id="parameters-20" tabindex="-1">Parameters <a class="header-anchor" href="#parameters-20" aria-label="Permalink to &quot;Parameters&quot;">​</a></h4><table><thead><tr><th style="text-align:left;">Name</th><th style="text-align:left;">Type</th><th style="text-align:left;">Description</th></tr></thead><tbody><tr><td style="text-align:left;"><code>result</code></td><td style="text-align:left;"><a href="./Result.html"><code>Result</code></a>&lt;<code>undefined</code> | <code>null</code> | <code>T</code>, <code>E</code>&gt;</td><td style="text-align:left;">Value of the result.</td></tr></tbody></table><h4 id="returns-26" tabindex="-1">Returns <a class="header-anchor" href="#returns-26" aria-label="Permalink to &quot;Returns&quot;">​</a></h4><p><code>null</code> | <a href="./Result.html"><code>Result</code></a>&lt;<code>T</code>, <code>E</code>&gt;</p><h4 id="defined-in-29" tabindex="-1">Defined in <a class="header-anchor" href="#defined-in-29" aria-label="Permalink to &quot;Defined in&quot;">​</a></h4><p><a href="https://github.com/Embers-of-the-Fire/result-js/blob/12a4c09/src/lib.ts#L265" target="_blank" rel="noreferrer">src/lib.ts:265</a></p>',321),d=[o];function s(n,i,h,c,u,b){return t(),a("div",null,d)}const m=e(l,[["render",s]]);export{p as __pageData,m as default};
